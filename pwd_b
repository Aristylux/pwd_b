#!/bin/sh

Debug="false"
Icons="false"

Slash=""
AbsolutePath=""
Way=""

# -------------------------------------------------------

# print_help:
# Print usage for pwd_b
print_help () {
	echo "Usage : pwd [OPTION]"
    echo "  example:   pwd -d"
    echo "  example:   pwd -h\n"
    echo "\t-d              debug mode"
    echo "\t-i              use icons"
    echo "\t-h, --help      display this help and exit"
	exit 0
}

# check_arguments:
# Check argument in parameter
# -h for print help
# -d to enable debug
check_arguments () {
	case $1 in
		--help|-h)
			print_help
			;;
		-d)
			Debug="true"
			;;
        -i)
            Icons="true"
            ;;
	esac
}

# echod:
# Enable echo for debug
echod () {
    if [ "$Debug" = "true" ]
    then
        echo "$*"
    fi
}

# -------------------------------------------------------

# check_main_directory:
# determine if the main directory is / (root) or ~ (home)
check_main_directory () {
	case "$PWD" in 
		"$HOME"*)
			return 1
			;;
		"/"*)
			return 2
			;;
	esac
}

checkFirstDir () {
    FirstDirectory="$1"
    #echod "First dir : $FirstDirectory"
    if [ "$FirstDirectory" = "" ]
    then
        Way=""
    else
        if [ "$Slash" = "/" ]
        then
            Way="$FirstDirectory"
        else
            if [ "$Icons" = "true" ]
            then
                Way="/"$(icon "$FirstDirectory")
            else
                Way="/$FirstDirectory"
            fi
        fi        
    fi
    echo "$Way"
}

# checkDirectory:
# 1st pass of compression
# delete all spaces (' ')
checkDirectory () {
    dirName="$1"
    #echod "->             '$dirName'"
    CompressDirectoryName=$(echo "$dirName" | tr -d ' ')
    #echod "-> compressed: '$CompressDirectoryName'"
    echo "$CompressDirectoryName"
}

formatDirectoryName () {
    dirName="$1"
    #echod "-> $dirName"
    if [ "${#dirName}" -ge 12 ]
    then
        DirectoryNameFormated=$(echo "$dirName" | cut -c 1-4).
    elif [ "${#dirName}" -ge 6 ]
    then
        DirectoryNameFormated=$(echo "$dirName" | cut -c 1-3).
    else
        DirectoryNameFormated="${dirName}"
    fi
    echo "$DirectoryNameFormated"
}

icon () {
    dirName="$1"
    echod "'$dirName'"
    case "$dirName" in
        "Documents")
            printf 'ðŸ“„'
            ;;
        "Downloads")
            printf 'ðŸ“¥'
            ;;
        "Desktop")
            printf 'ðŸ’»'
            ;;
        "Pictures")
            printf 'ðŸ–¼  '
            ;;
        "Music")
            printf 'ðŸŽµ'
            ;;
        "Videos")
            printf 'ðŸŽ¥'
            ;;
        *)
            printf "$dirName"
            ;;
    esac   
}

#-------- Main program ----------


check_arguments "$1"

## ------------ ##
## Main Program ##
## ------------ ##

check_main_directory

if [ $? -eq 1 ]
then
	Slash="~"
    userHome=$(eval echo ~$USER) # user home
    echod $userHome
    AbsolutePath=$(echo "$PWD" | sed "s|^$userHome||") # remove /home/$USER/

    if ! [ "$AbsolutePath" = "" ]
    then
        AbsolutePath="$(echo $AbsolutePath | cut -c 2-)"
    fi

else	#equal 2
	#Slash="/"
 	AbsolutePath="$PWD/"
fi
echod "Absolute path: $AbsolutePath"

OldIFS=$IFS

number=0

IFS="/" # set the input field separator to "/"

# For each folder names
for DirectoryName in $AbsolutePath
do
    # Check the first directory
    if [ $number -eq 0 ]
    then
        Way=$(checkFirstDir "$DirectoryName")
    else
        dir=$(checkDirectory "$DirectoryName")
        formattedDir=$(formatDirectoryName "$dir")
        Way="$Way/$formattedDir"
        echod " . $DirectoryName - $formattedDir"
    fi
    number=$((number + 1))
done

IFS=$OldIFS

echo "$Slash$Way"